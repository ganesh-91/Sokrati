{"version":3,"sources":["reducers/recipeReducer.js","reducers/groceryReducer.js","store/store.js","actions/recipeActions.js","utils/axiosInterceptor.js","utils/appUtils.js","components/recipeGrid/index.js","components/singleRecipe/index.js","components/sideBar/index.js","components/grocery/index.js","components/Page404/index.js","App.js","serviceWorker.js","index.js"],"names":["recipeState","singleRecipe","uri","label","image","source","url","shareAs","dietLabels","healthLabels","cautions","ingredientLines","calories","totalTime","id","recipeList","recipeReducer","state","action","newState","type","update","$set","data","groceryState","groceryList","groceryReducer","$push","$apply","filter","t","window","localStorage","setItem","JSON","stringify","rootReducer","combineReducers","store","createStore","recipeActions","updateSingleRecipe","updateRecipeList","addGroceryList","deleteGrocery","updateGroceryList","config","axiosInterceptor","axios","create","baseURL","API","getApi","get","concat","utils","uniqueIdGenerator","replace","c","r","Math","random","toString","SingleRecipeCard","toSingleRecipe","_this","props","react_default","a","createElement","className","src","this","alt","Link","to","onClick","aria-hidden","length","Component","RecipeGrid","_this2","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","recipe","_responseParser","resp","newArr","hits","forEach","el","obj","push","getRecipeList","parse","getItem","then","res","console","log","setState","_this3","table","map","recipeGrid_SingleRecipeCard","key","connect","dispatch","SingleRecipe","getSingleRecipe","addToGrocery","name","ingredient","role","aria-label","style","fontSize","SideBar","SingleGroceryList","class","uniqKey","htmlFor","Grocery","getGroceryList","list","groceryListTable","grocery_SingleGroceryList","noDataFound","Page404","backClick","App","es","BrowserRouter","components_sideBar","Switch","Route","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6178d1ed.chunk.js","sourcesContent":["import update from \"immutability-helper\";\n\nconst recipeState = {\n    singleRecipe: {\n        uri: \"\",\n        label: \"\",\n        image: \"\",\n        source: \"\",\n        url: \"\",\n        shareAs: \"\",\n        dietLabels: [],\n        healthLabels: [],\n        cautions: [],\n        ingredientLines: [],\n        calories: 0,\n        totalTime: 0,\n        id: \"\"\n    },\n    recipeList: []\n};\n\nconst recipeReducer = function (state, action) {\n    let newState = state;\n\n\n\n    if (typeof state === 'undefined') {\n        return recipeState;\n    }\n\n    switch (action.type) {\n\n        case 'UPDATE_RECIPE_LIST':\n            newState = update(state, {\n                recipeList: { $set: action.data }\n            });\n            break;\n\n        case 'UPDATE_SINGLE_RECIPE':\n            newState = update(state, {\n                singleRecipe: { $set: action.data }\n            });\n            break;\n\n        default:\n            break;\n    }\n\n    // window.localStorage.setItem('newState', JSON.stringify(newState));\n    return newState;\n\n}\n\nexport default recipeReducer;","import update from \"immutability-helper\";\n\nconst groceryState = {\n    groceryList: []\n};\n\nconst groceryReducer = function (state, action) {\n    let newState = state;\n\n    if (typeof state === 'undefined') {\n        return groceryState;\n    }\n\n    switch (action.type) {\n\n        case 'ADD_TO_GROCERY':\n            newState = update(state, {\n                groceryList: { $push: [action.data] }\n            });\n            break;\n\n        case 'REMOVE_FROM_GROCERY':\n            newState = update(state, {\n                groceryList: {\n                    $apply: ((groceryList) => {\n                        return groceryList.filter((t) => {\n                            return t.id !== action.data\n                        })\n                    })\n                }\n            });\n            break;\n\n        case 'UPDATE_GROCERY':\n            newState = update(state, {\n                groceryList: { $set: action.data }\n            });\n            break;\n\n        default:\n            break;\n    }\n\n    window.localStorage.setItem('groceryList', JSON.stringify(newState.groceryList));\n    return newState;\n\n}\n\nexport default groceryReducer;","import { createStore, combineReducers } from 'redux';\nimport recipeReducer from '../reducers/recipeReducer';\nimport groceryReducer from '../reducers/groceryReducer';\n\n// const store = createStore(recipeReducer);\n\nconst rootReducer = combineReducers({\n    groceryReducer,\n    recipeReducer\n})\n\nconst store = createStore(rootReducer)\n\nexport default store;","export const updateRecipeList = (data) => {\n    return ({\n        type: 'UPDATE_RECIPE_LIST',\n        data: data\n    });\n}\n\nexport const updateSingleRecipe = (data) => {\n    return ({\n        type: 'UPDATE_SINGLE_RECIPE',\n        data: data\n    });\n}\n\nexport const addGroceryList = (data) => {\n    return ({\n        type: 'ADD_TO_GROCERY',\n        data: data\n    });\n}\n\nexport const deleteGrocery = (id) => {\n    return ({\n        type: 'REMOVE_FROM_GROCERY',\n        data: id\n    });\n}\n\nexport const updateGroceryList = (data) => {\n    return ({\n        type: 'UPDATE_GROCERY',\n        data: data\n    });\n}\n\nconst recipeActions = {\n    updateSingleRecipe,\n    updateRecipeList,\n    addGroceryList,\n    deleteGrocery,\n    updateGroceryList\n};\n\nexport default recipeActions;","import axios from 'axios';\n\n\nlet config = {\n    YOUR_APP_ID: '3bc67f24',\n    YOUR_APP_KEY: '28d127be55d278db21447667e7cf329c'\n}\n\nexport const axiosInterceptor = axios.create({\n    baseURL: `https://api.edamam.com/`\n    // baseURL: `http://app.chefnote.me`\n});\n\nexport const getApi = (data) => {\n    return axiosInterceptor.get(`search?app_id=${config.YOUR_APP_ID}&app_key=${config.YOUR_APP_KEY}&to=20&${data}`)\n    // return axiosInterceptor.get(`recipes.json?${data}`)\n}\n\nconst API = {\n    getApi\n};\n\nexport default API;","export const uniqueIdGenerator = (() => {\n    return 'xyxy-yxyx'.replace(/[xy]/g, function (c) {\n        var r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 || 0x8);\n        return v.toString(16);\n    });\n});\n\nconst utils = {\n    uniqueIdGenerator\n};\n\nexport default utils;\n","import React, { Component } from \"react\";\nimport { Link } from 'react-router-dom';\n\nimport { connect } from \"react-redux\";\nimport recipeActions from '../../actions/recipeActions';\n\nimport API from '../../utils/axiosInterceptor'\nimport utils from '../../utils/appUtils'\n\nimport './index.scss';\n\nclass SingleRecipeCard extends Component {\n    render() {\n        // console.log('this.props',this.props)\n        return (\n            <div className=\"card\">\n                <img src={this.props.data.image} className=\"card-img-top\" alt=\"...\" />\n                <div className=\"card-body border-top\">\n                    <div>\n                        <Link to={`recipe/${this.props.data.id}`} onClick={this.toSingleRecipe}>\n                            <h5 className=\"card-title\">{this.props.data.label}</h5>\n                        </Link>\n                    </div>\n                    <div>\n                        <small className=\"text-muted text-left info-sec\">\n                            <span className=\"time-int mr-3\">\n                                <i className=\"fa fa-clock-o mr-1\" aria-hidden=\"true\"></i>\n                                {this.props.data.totalTime} min\n                            </span>\n                            <span>\n                                <i className=\"fa fa-list-alt mr-1\" aria-hidden=\"true\"></i>\n                                {this.props.data.ingredientLines.length}\n                            </span>\n                        </small>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    toSingleRecipe = (() => {\n        this.props.toSingleRecipe(this.props.data);\n    })\n\n}\n\nclass RecipeGrid extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            recipeList: []\n        };\n    }\n    render() {\n\n        let table =\n            this.props.recipeList.map((recipe) => {\n                return (<SingleRecipeCard data={recipe} key={recipe.id} toSingleRecipe={this.toSingleRecipe} />);\n            });\n        return (\n            <div className=\"jumbotron page-container recipe-grid\">\n                <div className=\"top-sec text-center\">\n                    <h3>Recipes</h3>\n                </div>\n                <div className=\"container-fluid\">\n                    <div className=\"row pl-3\" >\n                        {table}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    componentDidMount() {\n        this.getRecipeList();\n    }\n\n    toSingleRecipe = ((recipe) => {\n        this.props.updateSingleRecipe(recipe);\n        window.localStorage.setItem('singleRecipe', JSON.stringify(recipe));\n    })\n\n    _responseParser = (resp) => {\n        var newArr = [];\n        resp.hits.forEach((el) => {\n            const obj = {\n                uri: el.recipe.uri,\n                label: el.recipe.label,\n                image: el.recipe.image,\n                source: el.recipe.source,\n                url: el.recipe.url,\n                shareAs: el.recipe.shareAs,\n                dietLabels: el.recipe.dietLabels,\n                healthLabels: el.recipe.healthLabels,\n                cautions: el.recipe.cautions,\n                ingredientLines: el.recipe.ingredientLines,\n                calories: el.recipe.calories,\n                totalTime: el.recipe.totalTime,\n                id: utils.uniqueIdGenerator()\n            };\n            newArr.push(obj);\n        });\n        return newArr;\n    }\n\n    getRecipeList = () => {\n        if (this.props.recipeList.length === 0) {\n            let resp = JSON.parse(window.localStorage.getItem('recipeList'));\n            if (resp && resp.length > 0) {\n                this.props.updateRecipeList(resp);\n            } else {\n                API.getApi('q=chicken&')\n                    .then(res => {\n                        console.log(res.data.hits);\n\n                        let newArr = [];\n                        newArr = this._responseParser(res.data);\n                        this.setState({\n                            recipeList: newArr\n                        })\n                        this.props.updateRecipeList(newArr);\n                        window.localStorage.setItem('recipeList', JSON.stringify(newArr));\n                    })\n            }\n        }\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        updateRecipeList: (data) => {\n            dispatch(recipeActions.updateRecipeList(data));\n        },\n        updateSingleRecipe: (data) => {\n            dispatch(recipeActions.updateSingleRecipe(data));\n        }\n    };\n};\n\nconst mapStateToProps = (store) => {\n    return {\n        recipeList: store.recipeReducer.recipeList\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RecipeGrid);\n","import React, { Component } from \"react\";\nimport { Link } from 'react-router-dom';\n\nimport { connect } from \"react-redux\";\nimport recipeActions from '../../actions/recipeActions';\nimport utils from '../../utils/appUtils'\nimport './index.scss';\n\nclass SingleRecipe extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            recipe: {\n                uri: \"\",\n                label: \"\",\n                image: \"\",\n                source: \"\",\n                url: \"\",\n                shareAs: \"\",\n                dietLabels: [],\n                healthLabels: [],\n                cautions: [],\n                ingredientLines: [],\n                calories: 0,\n                totalTime: 0,\n                id: \"\"\n            }\n        };\n    }\n    render() {\n        // console.log('userData', this.props.userData);\n        return (\n            <div className=\"page-container jumbotron single-recipe flex-column\">\n                <div className=\"top-sec border-bottom\">\n                    <div className=\"btn-toolbar justify-content-between\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\n                        <div className=\"btn-group\" role=\"group\" aria-label=\"First group\">\n                            <button className=\"btn btn-sm btn-link\">\n                                <i className=\"fa fa-chevron-left mr-1\" aria-hidden=\"true\"></i>\n                                <Link to=\"/recipe-list\">Back to list</Link>\n                            </button>\n                        </div>\n                        <div className=\"btn-group\" role=\"group\" aria-label=\"First group\">\n                            <button className=\"btn btn-sm btn-light border\" onClick={this.addToGrocery}>Add to Grocery List</button>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        <div className=\"col-md-4 col-lg-3 \">\n\n                            <div className=\"bg-white p-3 border border-bottom-0 rounded-sm\">\n                                <div className=\"sm-top d-lg-none d-xl-none d-md-none\">\n                                    <div className=\"sm-title\">\n                                        <h3 className=\"card-title\">{this.props.singleRecipe.label}</h3>\n                                    </div>\n                                    <div className=\"sm-icon\">\n                                        <div className=\"time-int mr-3\">\n                                            <i className=\"fa fa-clock-o mr-1\" style={{ fontSize: '1rem' }} aria-hidden=\"true\"></i>\n                                            {this.props.singleRecipe.totalTime} min\n                                        </div>\n                                        <div>\n                                            <i className=\"fa fa-list-alt mr-1\" style={{ fontSize: '1rem' }} aria-hidden=\"true\"></i>\n                                            {this.props.singleRecipe.ingredientLines.length}\n                                        </div>\n                                    </div>\n                                </div>\n                                <img src={this.props.singleRecipe.image} className=\"card-img-top\" alt=\"...\" />\n                            </div>\n                            <div className=\"p-3 bg-white border border-top-0\">\n                                <h5>Ingredients</h5>\n                                {this.props.singleRecipe.ingredientLines.map((el) => {\n                                    return (\n                                        <p className=\"mb-1\" key={utils.uniqueIdGenerator()}>\n                                            <i className=\"fa fa-plus mr-1\" aria-hidden=\"true\"></i>\n                                            <span>\n                                                {el}\n                                            </span>\n                                        </p>\n                                    );\n                                })}\n                            </div>\n                        </div>\n                        <div className=\"col-md-8 col-lg-9\">\n                            <div className=\"card\">\n                                <div className=\"card-body row d-none d-md-block d-lg-block d-xl-block\">\n                                    <div className=\"col-9\">\n                                        <h3 className=\"card-title\">{this.props.singleRecipe.label}</h3>\n                                    </div>\n                                    <div className=\"col-3\">\n                                        <div className=\"time-int mr-3\">\n                                            <i className=\"fa fa-clock-o mr-1\" aria-hidden=\"true\"></i>\n                                            {this.props.singleRecipe.totalTime} min\n                                        </div>\n                                        <div>\n                                            <i className=\"fa fa-list-alt mr-1\" aria-hidden=\"true\"></i>\n                                            {this.props.singleRecipe.ingredientLines.length}\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"p-3 border-top\">\n                                    <h5>Instructions</h5>\n                                    Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum\n                                     has been the industry's standard dummy text ever since the 1500s, when an \n                                     unknown printer took a galley of type and scrambled it to make a type specimen \n                                     book. It has survived not only five centuries, but also the leap into electronic \n                                     typesetting, remaining essentially unchanged. It was popularised in the 1960s with \n                                     the release of Letraset sheets containing Lorem Ipsum passages, and more recently with \n                                     desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    componentDidMount() {\n        this.getSingleRecipe();\n    }\n    getSingleRecipe = (() => {\n        if (this.props.singleRecipe.id === \"\") {\n            let resp = JSON.parse(window.localStorage.getItem('singleRecipe'));\n            if (resp.id !== \"\") {\n                this.props.updateSingleRecipe(resp);\n            }\n        }\n    })\n\n    addToGrocery = (() => {\n        const data = {\n            name: this.props.singleRecipe.label,\n            id: utils.uniqueIdGenerator(),\n            ingredient: this.props.singleRecipe.ingredientLines\n        }\n        this.props.addGroceryList(data);\n    })\n\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addGroceryList: (data) => {\n            dispatch(recipeActions.addGroceryList(data));\n        },\n        updateSingleRecipe: (data) => {\n            dispatch(recipeActions.updateSingleRecipe(data));\n        }\n    };\n};\n\nconst mapStateToProps = (store) => {\n    return {\n        singleRecipe: store.recipeReducer.singleRecipe\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SingleRecipe);","import React, { Component } from \"react\";\nimport { Link } from 'react-router-dom';\nimport './index.scss';\n\nclass SideBar extends Component {\n    render() {\n        return (\n            <div className=\"side-bar\">\n                <div className=\"btn-group-vertical w-100\" role=\"group\">\n                    <Link to=\"/recipe-list\" className=\"w-100\">\n                        <button type=\"button\" className=\"btn btn-warning btn-block rounded-0 pl-1 pr-1 pb-4 pt-4\">\n                            <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\n                            <br />\n                            <small>Recipe</small>\n                        </button>\n                    </Link>\n                    <Link to=\"/grocery-list\" className=\"w-100\">\n                        <button type=\"button\" className=\"btn btn-light btn-block rounded-0 pl-1 pr-1 text-center pb-3 pt-3 border-bottom\">\n                            <i className=\"fa fa-list-alt\" aria-hidden=\"true\"></i>\n                            <br />\n                            <small>Grocery</small>\n                        </button>\n                    </Link>\n                </div>\n            </div>\n        );\n    }\n}\nexport default SideBar;","import React, { Component } from \"react\";\n\nimport { connect } from \"react-redux\";\nimport recipeActions from '../../actions/recipeActions';\n\nimport utils from '../../utils/appUtils'\n\nimport './index.scss';\n\nclass SingleGroceryList extends Component {\n    render() {\n        return (\n            <div className=\"card border-0\" >\n                <div className=\"card-header border-0\">\n                    <span className=\"m-0 recipe-title\">{this.props.data.name}</span>\n                    <i class=\"fa fa-trash-o mr-1 icon\" onClick={this.deleteGrocery} aria-hidden=\"true\"></i>\n                </div>\n                <div className=\"card-body\">\n                    {this.props.data.ingredient.map((el) => {\n                        const uniqKey = utils.uniqueIdGenerator();\n                        return (\n                            <div key={uniqKey} className=\"form-group form-check\">\n                                <input type=\"checkbox\" className=\"form-check-input\" id={uniqKey} />\n                                <label className=\"form-check-label\" htmlFor={uniqKey}>{el}</label>\n                            </div>\n                        );\n                    })}\n                </div>\n            </div>\n        );\n    }\n\n    deleteGrocery = (() => {\n        this.props.deleteGrocery(this.props.data.id);\n    })\n\n}\n\nclass Grocery extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            groceryList: [],\n            list: []\n        };\n    }\n    render() {\n        let groceryListTable =\n            this.props.groceryList.map((list) => {\n                return (<SingleGroceryList data={list} key={list.id} deleteGrocery={this.deleteGrocery} />);\n            });\n        let noDataFound = (<div>List is Empty !!</div>);\n        return (\n            <div className=\"jumbotron page-container grocery-list w-100\">\n                <div className=\"top-sec text-center border-bottom\">\n                    <h3>Grocery list</h3>\n                </div>\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        <div className=\"col-xl-8 col-sm\">\n                            <div className=\"card p-3\">\n                                {this.props.groceryList.length === 0 ? noDataFound : groceryListTable}\n                            </div>\n                        </div>\n                        <div className=\"col-4\"></div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    componentDidMount() {\n        this.getGroceryList();\n    }\n\n    deleteGrocery = ((recipe) => {\n        this.props.deleteGrocery(recipe);\n    })\n\n    getGroceryList = (() => {\n        if (this.props.groceryList.length <= 0) {\n            let resp = JSON.parse(window.localStorage.getItem('groceryList'));\n            if (resp.length !== 0) {\n                this.props.updateGroceryList(resp);\n            }\n        }\n    })\n\n\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        deleteGrocery: (data) => {\n            dispatch(recipeActions.deleteGrocery(data));\n        },\n        updateGroceryList: (data) => {\n            dispatch(recipeActions.updateGroceryList(data));\n        }\n    };\n};\n\nconst mapStateToProps = (store) => {\n    return {\n        groceryList: store.groceryReducer.groceryList\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Grocery);\n","import React, { Component } from \"react\";\n// import { Jumbotron,Button } from \"react-bootstrap\";\n\nclass Page404 extends Component {\n    render() {\n        return (\n          <div>\n          <div className=\"jumbotron\">\n            <div className=\"container\">\n              <div className=\"row justify-content-center\">\n                <div className=\"col-md-6\">\n                  <div className=\"clearfix\">\n                    <h1 className=\"float-left display-3 mr-4\">404</h1>\n                    <h4 className=\"pt-3\">Oops! You're lost.</h4>\n                    <p className=\"text-muted\">The page you are looking for was not found.</p>\n                    <button onClick={this.backClick} >Go back</button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          </div>\n        );\n    }\n}\nexport default Page404;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/store'\n\nimport './App.scss';\nimport RecipeGrid from './components/recipeGrid';\nimport SingleRecipe from './components/singleRecipe';\nimport SideBar from './components/sideBar';\nimport Grocery from './components/grocery';\nimport Page404 from './components/Page404';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Provider store={store}>\n          <Router>\n            <div className=\"app-container\">\n              <SideBar />\n              <Switch>\n                <Route exact path=\"/\" component={RecipeGrid}></Route>\n                <Route path=\"/grocery-list\" component={Grocery}></Route>\n                <Route path=\"/recipe-list\" component={RecipeGrid}></Route>\n                <Route path=\"/recipe/:id\" component={SingleRecipe}></Route>\n                <Route path=\"*\" component={Page404}></Route>\n              </Switch>\n            </div>\n\n          </Router>\n        </Provider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}